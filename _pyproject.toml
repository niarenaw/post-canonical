[project]
name = "post-canonical"
version = "0.1.0"
description = "A Python implementation of Post Canonical Systems"
authors = [
    {name = "niarenaw"},
]
dependencies = []
requires-python = ">=3.12"
readme = "README.md"
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.12",
    "Topic :: Formal Languages and Automata Theory :: Discrete Mathematics",
]

[project.optional-dependencies]
dev = [
    "mypy>=1.8.0",
    "ruff>=0.3.0",
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/post_canonical"]

[tool.ruff]
line-length = 120
target-version = "py312"
select = ["E", "F", "I", "N", "W", "B", "UP", "PL", "RUF"]
ignore = []

[tool.ruff.isort]
known-first-party = ["post_canonical"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
"tests/*" = ["PLR2004"]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.pycodestyle]
max-doc-length = 120

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.pyupgrade]
target-version = "3.12"

[tool.mypy]
python_version = "3.12"
use_strict = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=post_canonical --cov-report=term-missing" 